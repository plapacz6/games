out of date draft

The first draft of the breakdown of functionality. (Out of date)
main_ncurses --> main_menu_ncurses, main_menu_logic
  main menu:
    start game
    pause    
    end game
    restart (play_again)
    edit cfg
snake_ncurses --> game_snake_ncurses
    drawing gameplay
      - checking kdb and settin state
      - drawing board
      - drawing sanke in current state
      - drawing apples
      - drawing obstackles
      - drawing other snakes
      - drawing other things
snake_logic --> game_snake_logic
    logic gameplay:
      - init apples
      - placing apples
      - changing states of game
      - chekcing collisions (simple checking if any collision occured)
snake_ --> snake_logic
    logic of snake:
      - init snake
      - moving snake
      - growing snake
      - changing speed of snake


/???
  Questions for design decisions.
  Is this snake to watch the boards and check if there is anything
  collides or whether another snake is approaching it.

  Is this the board to monitor traffic and alert or inform?
  dreams about threats and developments.
  Here it would have to show where the collision is and where it is safe (v
  monitoring) directions.

  Whether the snake is to ask questions about the state in a given direction.
???/
-- obserwing fraction of board and making decision
    about changing direction
-- checking and tracing approaching snakes
-- predicting collisions
-- interface for AI

/**  TODO
Ideas to consider.
Each game object has a separate set of files (c, h) (logic, interface).
Subsystems separately developed and used only here:
- menu
- config / save file
menu:
- defined in some text file (json) and generated dynamically in memory.
*/

